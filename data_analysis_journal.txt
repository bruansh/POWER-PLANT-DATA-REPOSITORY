QUESTIONS ABOUT THE DATASET



--WE COUNT THE NUMBER OF SEPARATE COUNTRIES AVAILABLE IN THE DATA

SELECT COUNT(DISTINCT COUNTRY) AS NUMBER_OF_COUNTRIES
FROM NAME_LOCATION

--OUTPUT=167








--HOW MANY POWER PLANTS DO COUNTRIES HAVE?

SELECT COUNTRY_LONG AS COUNTRY,
	COUNT(DISTINCT ID) AS NUMBER_OF_POWER_PLANTS
FROM NAME_LOCATION
GROUP BY COUNTRY_LONG
ORDER BY NUMBER_OF_POWER_PLANTS DESC;










--WE CREAT A NEW TABLE TOTAL_POWER_BY COUNTRY

--WE ALSO REMOVE ANY ROWS WITH MISSING DATA AS WE ARE GOING TO TAKE AN AVERAGE OF POWER OUTPUT OVER SEVERAL YEARS TO COMPARE THE POWER OUTPUT OF COUNTRIES AND MISSING VALUES WOULD GREATLY IMPACT THIS AVERAGE

CREATE TABLE TOTAL_POWER_BY_COUNTRY AS
	(SELECT COUNTRY_LONG AS COUNTRY,
			SUM(POWER_OUT_2013) AS TOTAL_POWER_OUT_GWH_2013,
			SUM(POWER_OUT_2014) AS TOTAL_POWER_OUT_GWH_2014,
			SUM(POWER_OUT_2015) AS TOTAL_POWER_OUT_GWH_2015,
			SUM(POWER_OUT_2016) AS TOTAL_POWER_OUT_GWH_2016,
			SUM(POWER_OUT_2017) AS TOTAL_POWER_OUT_GWH_2017
		FROM NAME_LOCATION
		INNER JOIN POWER_GENERATED_GOLD ON NAME_LOCATION.ID = POWER_GENERATED_GOLD.ID
		GROUP BY COUNTRY_LONG);
		
		
DELETE FROM TOTAL_POWER_BY_COUNTRY
WHERE TOTAL_POWER_OUT_GWH_2013 IS NULL
      OR TOTAL_POWER_OUT_GWH_2014 IS NULL
      OR TOTAL_POWER_OUT_GWH_2015 IS NULL
      OR TOTAL_POWER_OUT_GWH_2016 IS NULL
      OR TOTAL_POWER_OUT_GWH_2017 IS NULL;
	  
	  
--DELETED ROWS=19







--AVERAGING THE POWER  OUTPUT FEROM DIFFERENT YEARS TO HAVE A FAIR AND EASIER COMPARISON BETWEEN COUNTRIES

SELECT COUNTRY, 
(TOTAL_POWER_OUT_GWH_2013 + 
 TOTAL_POWER_OUT_GWH_2014 + 
 TOTAL_POWER_OUT_GWH_2015 + 
 TOTAL_POWER_OUT_GWH_2016 + 
 TOTAL_POWER_OUT_GWH_2017 )/5 AS AVG_OUTPUT_GWH_13_TO_17
FROM TOTAL_POWER_BY_COUNTRY
ORDER BY AVG_OUTPUT_GWH_13_TO_17 DESC;

--RESULTS SAVED AS CSV FILE








--WE FIND OUT THE COUNT OF DIFFERENT FUEL TYPES AS PRIMARY FUELS, SECONDARY FUELS AND SO ON

SELECT FUEL_1 AS FUEL,
	COUNT(FUEL_1) AS COUNT_AS_FUEL_1,
	COUNT(FUEL_2) AS COUNT_AS_FUEL_2,
	COUNT(FUEL_3) AS COUNT_AS_FUEL_3,
	COUNT(FUEL_4) AS COUNT_AS_FUEL_4
FROM FUEL_TYPES
GROUP BY FUEL_1
ORDER BY COUNT_AS_FUEL_1 DESC

-- RESULTS SAVED AS CSV FILE








--WE FIND OUT WHICH FUELS PRODUCE THE MOST ENERGY OUTPUT
--WE CREATE A *VIEW* FOR FURTHER ANALYSIS


CREATE TABLE TOTAL_POWER_BY_FUEL AS (SELECT FUEL_1 AS FUEL,
	SUM(POWER_OUT_2013) AS TOTAL_OUTPUT_2013_GWH,
	SUM(POWER_OUT_2014) AS TOTAL_OUTPUT_2014_GWH,
	SUM(POWER_OUT_2015) AS TOTAL_OUTPUT_2015_GWH,
	SUM(POWER_OUT_2016) AS TOTAL_OUTPUT_2016_GWH,
	SUM(POWER_OUT_2017) AS TOTAL_OUTPUT_2017_GWH
FROM 
     FUEL_TYPES INNER JOIN POWER_GENERATED_GOLD 
ON 
     FUEL_TYPES.ID = POWER_GENERATED_GOLD.ID
GROUP BY FUEL)








--WE SEE THAT WIND AND TIDAL FUEL OUTPUT IS NULL EVERYWHERE SO WE DELETE IT FROM OUR TABLE 


DELETE
FROM TOTAL_POWER_BY_FUEL
WHERE TOTAL_OUTPUT_2013_GWH IS NULL;


DELETE
FROM TOTAL_POWER_BY_FUEL
WHERE TOTAL_OUTPUT_2014_GWH IS NULL;


DELETE
FROM TOTAL_POWER_BY_FUEL
WHERE TOTAL_OUTPUT_2015_GWH IS NULL;


DELETE
FROM TOTAL_POWER_BY_FUEL
WHERE TOTAL_OUTPUT_2016_GWH IS NULL;


DELETE
FROM TOTAL_POWER_BY_FUEL
WHERE TOTAL_OUTPUT_2017_GWH IS NULL;








-- NOW WE FIND OUT THE AVERAGE POWER PRODUCED BY FUEL

SELECT FUEL,
	(TOTAL_OUTPUT_2013_GWH + TOTAL_OUTPUT_2014_GWH + TOTAL_OUTPUT_2015_GWH + 
	 TOTAL_OUTPUT_2016_GWH + TOTAL_OUTPUT_2017_GWH) / 5 AS AVG_OUTPUT_13_TO_17_GWH
FROM TOTAL_POWER_BY_FUEL
ORDER BY AVG_OUTPUT_13_TO_17_GWH DESC;


--RESULTS SAVED AS CSV FILE

--AVERAGE POWER PRODUCED BY EACH FUEL COMPARED WITH THE NUMBER OF POWER PLANTS THAT EMPLOY THAT 

--RESULTS VISUALISED WITH TABLEAU AND SAVED IN REPOSITORY








--POWER GENERATED BY A COUNTRY VS THE NUMBER OF POWER PLANTS IT HAS VISUALISED AND SAVED IN REPO







-- NOW WE WANT TO FIND OUT HOW MUCH OF THE POWER GENERATED BY A COUNTRY IS BY PERCENTAGE FROM DIFFERENT FUEL SOURCES. WE WILL ONLY CONSIDER THE TOP 20 POWER PRODUCERS AS WE ALREADY KNOW THE REST ARE FAIRLY NEGLIGIBLE IN COMPARISON

--CREATED NEW TABLE AVG_IND_POWER_13_17 FOR ANALYSIS

CREATE TABLE AVG_INDIVIDUAL_POWER_13_17 AS
(SELECT ID, 
        (POWER_OUT_2013+POWER_OUT_2014+POWER_OUT_2015+
 POWER_OUT_2016+POWER_OUT_2017)/5 AS AVG_POWER_OUT_13_17
FROM POWER_GENERATED_GOLD
WHERE (POWER_OUT_2013 IS NOT NULL 
AND POWER_OUT_2014 IS NOT NULL
AND POWER_OUT_2015 IS NOT NULL
AND POWER_OUT_2016 IS NOT NULL
AND POWER_OUT_2017 IS NOT NULL));





--WE CREATE COLUMN FOR AVG POWER OUTPUT FROM 2-13-17 IN THE TOTAL POWER BY COUNTRY TABLE


ALTER TABLE TOTAL_POWER_BY_COUNTRY ADD COLUMN AVG_OUT_13_17_GWH numeric;


UPDATE TOTAL_POWER_BY_COUNTRY
SET AVG_OUT_13_17_GWH = (TOTAL_POWER_OUT_GWH_2013 + TOTAL_POWER_OUT_GWH_2014 + TOTAL_POWER_OUT_GWH_2015 + TOTAL_POWER_OUT_GWH_2016 + TOTAL_POWER_OUT_GWH_2017) / 5
WHERE (TOTAL_POWER_OUT_GWH_2013 IS NOT NULL
							AND TOTAL_POWER_OUT_GWH_2014 IS NOT NULL
							AND TOTAL_POWER_OUT_GWH_2015 IS NOT NULL
							AND TOTAL_POWER_OUT_GWH_2016 IS NOT NULL
							AND TOTAL_POWER_OUT_GWH_2017 IS NOT NULL);








--

CREATE TABLE FRACT_POW_BY_FUEL_COUNTRY AS 
SELECT 
    COUNTRY_LONG AS COUNTRY,
    SUM(CASE WHEN FUEL_1 = 'Coal' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_COAL,
    SUM(CASE WHEN FUEL_1 = 'Cogeneration' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_COGENERATION,
    SUM(CASE WHEN FUEL_1 = 'Wind' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_WIND,
    SUM(CASE WHEN FUEL_1 = 'Solar' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_SOLAR,
    SUM(CASE WHEN FUEL_1 = 'Storage' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_STORAGE,
    SUM(CASE WHEN FUEL_1 = 'Biomass' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_BIOMASS,
    SUM(CASE WHEN FUEL_1 = 'Hydro' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_HYDRO,
    SUM(CASE WHEN FUEL_1 = 'Other' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_OTHER,
    SUM(CASE WHEN FUEL_1 = 'Gas' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_GAS,
    SUM(CASE WHEN FUEL_1 = 'Waste' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_WASTE,
    SUM(CASE WHEN FUEL_1 = 'Geothermal' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_GEOTHERMAL,
    SUM(CASE WHEN FUEL_1 = 'Petcoke' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_PETCOKE,
    SUM(CASE WHEN FUEL_1 = 'Oil' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_OIL,
    SUM(CASE WHEN FUEL_1 = 'Nuclear' THEN AVG_POWER_OUT_13_17 ELSE 0 END) AS POWER_FROM_NUCLEAR
FROM
    FUEL_TYPES
INNER JOIN NAME_LOCATION ON FUEL_TYPES.ID = NAME_LOCATION.ID
INNER JOIN AVG_INDIVIDUAL_POWER_13_17 ON FUEL_TYPES.ID = AVG_INDIVIDUAL_POWER_13_17.ID
GROUP BY COUNTRY_LONG;

-- Add the new column to the existing table
ALTER TABLE FRACT_POW_BY_FUEL_COUNTRY
ADD COLUMN TOTAL_POWER_FROM_ALL_FUELS NUMERIC;

-- Update the new column with the sum of individual power columns
UPDATE FRACT_POW_BY_FUEL_COUNTRY
SET TOTAL_POWER_FROM_ALL_FUELS = 
    COALESCE(POWER_FROM_COAL, 0) + COALESCE(POWER_FROM_COGENERATION, 0) + COALESCE(POWER_FROM_WIND, 0) + COALESCE(POWER_FROM_SOLAR, 0) +
    COALESCE(POWER_FROM_STORAGE, 0) + COALESCE(POWER_FROM_BIOMASS, 0) + COALESCE(POWER_FROM_HYDRO, 0) + COALESCE(POWER_FROM_OTHER, 0) +
    COALESCE(POWER_FROM_GAS, 0) + COALESCE(POWER_FROM_WASTE, 0) + COALESCE(POWER_FROM_GEOTHERMAL, 0) + COALESCE(POWER_FROM_PETCOKE, 0) +
    COALESCE(POWER_FROM_OIL, 0) + COALESCE(POWER_FROM_NUCLEAR, 0);

-- Display the updated table
SELECT * FROM FRACT_POW_BY_FUEL_COUNTRY;












-- Which countries have the most advanced power plants?
-- Can be found out by considering the pps with the highest capacity or avg capacity by country


--We check on what the average and maximum capacity of power plants is by country:

SELECT COUNTRY_LONG AS COUNTRY,
	MAX(CAPACITY.CAPACITY_GW) AS MAX_CAPACITY,
	SUM(CAPACITY_GW) / COUNT(DISTINCT CAPACITY.ID) AS AVG_CAPACITY
FROM CAPACITY
INNER JOIN NAME_LOCATION ON CAPACITY.ID = NAME_LOCATION.ID
GROUP BY 


COUNTRY_LONG;

-- saved as csv and sql file









-- We Count the number of power plants established over the years based on the fuel they use

CREATE VIEW ESTABLISHED_YEAR_BY_FUEL_COUNT AS 
(SELECT COMMISSIONING_YEAR, 
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Coal' THEN ESTABLISHED_YEAR.ID END) AS COAL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Cogeneration' THEN ESTABLISHED_YEAR.ID END) AS COGENERATION,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Wind' THEN ESTABLISHED_YEAR.ID END) AS WIND,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Solar' THEN ESTABLISHED_YEAR.ID END) AS SOLAR,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Storage' THEN ESTABLISHED_YEAR.ID END) AS STORAGE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Biomass' THEN ESTABLISHED_YEAR.ID END) AS BIOMASS,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Hydro' THEN ESTABLISHED_YEAR.ID END) AS HYDRO,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Other' THEN ESTABLISHED_YEAR.ID END) AS OTHER,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Gas' THEN ESTABLISHED_YEAR.ID END) AS GAS,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Waste' THEN ESTABLISHED_YEAR.ID END) AS WASTE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Geothermal' THEN ESTABLISHED_YEAR.ID END) AS GEOTHERMAL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Petcoke' THEN ESTABLISHED_YEAR.ID END) AS PETCOKE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Oil' THEN ESTABLISHED_YEAR.ID END) AS OIL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Nuclear' THEN ESTABLISHED_YEAR.ID END) AS NUCLEAR,
    COUNT(DISTINCT ESTABLISHED_YEAR.ID) AS TOTAL_ESTABLISHED
FROM ESTABLISHED_YEAR
INNER JOIN FUEL_TYPES ON FUEL_TYPES.ID = ESTABLISHED_YEAR.ID
GROUP BY COMMISSIONING_YEAR
ORDER BY COMMISSIONING_YEAR ASC);

SELECT *
FROM ESTABLISHED_YEAR_BY_FUEL_COUNT;

-- Results saved
--CSV file loaded into tableau, visualization created










-- WE update established_year

DELETE FROM ESTABLISHED_YEAR
DELETE WHERE COMMISSIONING_YEAR IS NULL;







--WE UPDATE TOTAL POWER BY FUEL

-- Add a new column to the table


ALTER TABLE TOTAL_POWER_BY_FUEL
ADD COLUMN COUNT_AS_FUEL_1 INT;



-- Update the new column with the count values


UPDATE TOTAL_POWER_BY_FUEL
SET COUNT_AS_FUEL_1 = (
    SELECT COUNT(FUEL_1) 
    FROM FUEL_TYPES
    WHERE FUEL_TYPES.FUEL_1 = TOTAL_POWER_BY_FUEL.FUEL
    );

-- Add a new column to the table
ALTER TABLE TOTAL_POWER_BY_FUEL
ADD COLUMN POWER_TO_PLANT_RATIO_GWH INT;

-- Update the new column with the count values
UPDATE TOTAL_POWER_BY_FUEL
SET POWER_TO_PLANT_RATIO_GWH = AVG_OUTPUT_13_7_GWH/COUNT_AS_FUEL_1;s








--WE TRANSFORM SOME TABLES INTO VIEWS FOR BETTER ORGANISATION BETWEEN THE DATABASE AND THE QUERY RESULT TABLES
--COULD HAVE BEEN AVOIDED IF WE DID THIS TO BEGIN WITH, BUT HEY, IT STILL COUNTS
--SINCE THE ALREADY CREATED TABLES CANNOT DIRECTLY BE TRANSFORMED INTO VIEWS AND THEN DELETED, AS THE VIEWS WILL DEPEND ON THE ORIGINAL TABLE ITSELF, AND AT THIS POINT MUCH OF THE ANALYSIS ALSO DEPENDS ON THE TABLE, WE WILL KEEEP THEE ORIGINALLY CREATED TABLES AS TABLES AND NOTE TO AVOID DOING THIS IN THEE FUTURE









-- CREATING VIEW ESTABLISHED YEAR BY FUEL COUNT


CREATE VIEW ESTABLISHED_YEAR_BY_FUEL_COUNT AS 
(SELECT COMMISSIONING_YEAR, 
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Coal' THEN ESTABLISHED_YEAR.ID END) AS COAL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Cogeneration' THEN ESTABLISHED_YEAR.ID END) AS COGENERATION,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Wind' THEN ESTABLISHED_YEAR.ID END) AS WIND,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Solar' THEN ESTABLISHED_YEAR.ID END) AS SOLAR,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Storage' THEN ESTABLISHED_YEAR.ID END) AS STORAGE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Biomass' THEN ESTABLISHED_YEAR.ID END) AS BIOMASS,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Hydro' THEN ESTABLISHED_YEAR.ID END) AS HYDRO,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Other' THEN ESTABLISHED_YEAR.ID END) AS OTHER,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Gas' THEN ESTABLISHED_YEAR.ID END) AS GAS,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Waste' THEN ESTABLISHED_YEAR.ID END) AS WASTE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Geothermal' THEN ESTABLISHED_YEAR.ID END) AS GEOTHERMAL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Petcoke' THEN ESTABLISHED_YEAR.ID END) AS PETCOKE,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Oil' THEN ESTABLISHED_YEAR.ID END) AS OIL,
    COUNT(DISTINCT CASE WHEN FUEL_TYPES.FUEL_1 = 'Nuclear' THEN ESTABLISHED_YEAR.ID END) AS NUCLEAR,
    COUNT(DISTINCT ESTABLISHED_YEAR.ID) AS TOTAL_ESTABLISHED
FROM ESTABLISHED_YEAR
INNER JOIN FUEL_TYPES ON FUEL_TYPES.ID = ESTABLISHED_YEAR.ID
GROUP BY COMMISSIONING_YEAR
ORDER BY COMMISSIONING_YEAR ASC);

SELECT *
FROM ESTABLISHED_YEAR_BY_FUEL_COUNT;









--CREATE VIEW WEIGHTED ESTABLISHED YEAR BY FUEL COUNT 

CREATE VIEW WEIGHTED_ESTABLISHED_YEAR_BY_FUEL_COUNT AS
(
    SELECT 
        COMMISSIONING_YEAR,
        Coal * 1490 AS COAL,
        Cogeneration * 78 AS COGENERATION,
        Wind * 67 AS WIND,
        Solar * 28 AS SOLAR,
        Storage * 7 AS STORAGE,
        Biomass * 19 AS BIOMASS,
        Hydro * 471 AS HYDRO,
        Other * 75 AS OTHER,
        Gas * 528 AS GAS,
        Waste * 41 AS WASTE,
        Geothermal * 126 AS GEOTHERMAL,
        Petcoke * 662 AS PETCOKE,
        Oil * 55 AS OIL,
        Nuclear * 7523 AS NUCLEAR
    FROM ESTABLISHED_YEAR_BY_FUEL_COUNT
);









